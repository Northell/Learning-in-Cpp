// Умные указатели.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include "pch.h"
#include <iostream>
#include <memory>

using namespace std;
/*Изучаем:
auto_ptr
unique_ptr
shared_ptr
*/
template <class T>
class SmartPointer
{public:
	SmartPointer(T *ptr)
	{
		this->ptr = ptr;
	}
	~SmartPointer()
	{
		delete ptr;
	}

	T& operator* ()
	{
		return *ptr;
	}
private:
	T ptr;
};
int main()
{
	//SmartPointer<int> pointer = new int(5);
	
	
	auto_ptr<int> ap1(new int(5)); //недостаток, может хранить только ОДИН укзатель на одну и ту же переменную
	auto_ptr<int> ap2(ap1);

	unique_ptr<int> ap3(new int(5)); //недостаток, организовать хранение двух указателей на один и тот же предмет
	unique_ptr<int> ap4;			// можно только с помощью move, разрабы просто запретили использование как выше
	ap4 = move(ap3);

	shared_ptr<int> ap5(new int(5)); //решена проблема владениями несколькиими указателями на одну и ту же обл памяти
	shared_ptr<int> ap6(ap5);

	shared_ptr<int[]>(new int[6]{ 5,4,3,2,1 });		//создание динамического массива с умным указателем

}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
